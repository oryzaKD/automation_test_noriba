name: Appium Android Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      api-level:
        description: 'Android API Level'
        required: true
        default: '30'
        type: choice
        options:
          - '29'
          - '30'
          - '31'
          - '33'

jobs:
  appium-android-test:
    name: Run Appium Tests on Android
    runs-on: macos-latest
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        api-level: [30]
        target: [google_apis]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Appium
        run: |
          npm install -g appium@latest
          appium driver install uiautomator2

      - name: Verify Appium installation
        run: |
          appium --version
          appium driver list --installed

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Setup environment variables for email testing
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p appium/config
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> appium/config/email.env
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> appium/config/email.env
          echo "IMAP_HOST=${{ secrets.IMAP_HOST }}" >> appium/config/email.env
          echo "IMAP_PORT=${{ secrets.IMAP_PORT }}" >> appium/config/email.env

      - name: Start Appium Server
        run: |
          appium -p 4723 > appium.log 2>&1 &
          echo "APPIUM_PID=$!" >> $GITHUB_ENV

      - name: Wait for Appium Server
        run: |
          timeout 30 bash -c 'until curl -s http://localhost:4723/status > /dev/null; do sleep 1; done' || exit 1
          echo "Appium server is ready"

      - name: Run Appium Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            adb devices
            npm run wdio:appium || true

      - name: Upload Appium logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-logs-api-${{ matrix.api-level }}
          path: |
            appium.log
            appium/logs/**
          if-no-files-found: ignore

      - name: Upload test screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-screenshots-api-${{ matrix.api-level }}
          path: appium/screenshots/**
          if-no-files-found: ignore

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-reports-api-${{ matrix.api-level }}
          path: appium/reports/**
          if-no-files-found: ignore

      - name: Stop Appium Server
        if: always()
        run: |
          if [ ! -z "$APPIUM_PID" ]; then
            kill $APPIUM_PID || true
          fi

